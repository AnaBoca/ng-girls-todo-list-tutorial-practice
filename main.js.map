{"version":3,"sources":["./src/app/services/todo-list.service.ts","./src/app/input-button-unit/input-button-unit.component.ts","./src/app/input-button-unit/input-button-unit.component.html","./src/environments/environment.ts","./src/app/todo-item/todo-item.component.ts","./src/app/todo-item/todo-item.component.html","./src/app/list-manager/list-manager.component.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/storage.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { TodoItem } from '../interfaces/todo-item';\nimport { StorageService } from './storage.service';\n\nconst todoListStorageKey = 'Todo_List';\n\nconst defaultTodoList: TodoItem[] = [\n  {title: 'install NodeJS'},\n  {title: 'install Angular CLI'},\n  {title: 'create new app'},\n  {title: 'serve app'},\n  {title: 'develop app'},\n  {title: 'deploy app'},\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoListService {\n  todoList: TodoItem[];\n\n  constructor(private storageService: StorageService) {\n    this.todoList = storageService.getData(todoListStorageKey) || defaultTodoList;\n  }\n\n  private saveList() {\n    this.storageService.setData(todoListStorageKey, this.todoList);\n  }\n\n  getTodoList(): TodoItem[] {\n    return this.todoList;\n  }\n\n  addItem(item: TodoItem): void {\n    this.todoList.push(item);\n    this.saveList();\n  }\n\n  updateItem(item: TodoItem, changes): void {\n    const index = this.todoList.indexOf(item);\n    this.todoList[index] = {...item, ...changes};\n    this.saveList();\n  }\n\n  deleteItem(item: TodoItem): void {\n    const index = this.todoList.indexOf(item);\n    this.todoList.splice(index, 1);\n    this.saveList();\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-input-button-unit',\n  templateUrl: './input-button-unit.component.html',\n  styleUrls: ['./input-button-unit.component.scss']\n})\nexport class InputButtonUnitComponent implements OnInit {\n  title = 'Hello World';\n  @Output() submit: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  submitValue(newTitle: string): void {\n    this.submit.emit(newTitle);\n  }\n}\n","<input\n  class=\"todo-input\"\n  #inputElementRef\n  [value]=\"title\"\n  (keyup.enter)=\"submitValue($event.target.value)\"\n/>\n<button class=\"btn\" (click)=\"submitValue(inputElementRef.value)\">Save</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { TodoItem } from '../interfaces/todo-item';\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.scss']\n})\nexport class TodoItemComponent implements OnInit {\n  @Input() item: TodoItem;\n  @Output() remove: EventEmitter<TodoItem> = new EventEmitter<TodoItem>();\n  @Output() update: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  completeItem(): void {\n    this.update.emit({\n      item: this.item,\n      changes: {completed: !this.item.completed}\n    });\n  }\n\n  removeItem(): void {\n    this.remove.emit(this.item);\n  }\n\n}\n","<div class=\"todo-item\">\n  <input\n    type=\"checkbox\"\n    class=\"todo-checkbox\"\n    (click)=\"completeItem()\"\n    [checked]=\"item.completed\"\n  />\n  <span class=\"todo-title\" [ngClass]=\"{ 'todo-complete': item.completed }\">\n    {{ item.title }}\n  </span>\n\n  <button class=\"btn btn-red\" (click)=\"removeItem()\">remove</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TodoItem } from '../interfaces/todo-item';\nimport { TodoListService } from '../services/todo-list.service';\n\n@Component({\n  selector: 'app-list-manager',\n  template: `\n    <div class=\"todo-app\">\n      <app-input-button-unit (submit)=\"addItem($event)\"></app-input-button-unit>\n\n      <ul>\n        <li *ngFor=\"let todoItem of todoList\">\n          <app-todo-item\n            [item]=\"todoItem\"\n            (remove)=\"removeItem($event)\"\n            (update)=\"updateItem($event.item, $event.changes)\"></app-todo-item>\n        </li>\n      </ul>\n    </div>\n  `,\n  styleUrls: ['./list-manager.component.scss']\n})\nexport class ListManagerComponent implements OnInit {\n  todoList: TodoItem[] = [];\n\n  constructor(private todoListService: TodoListService) { }\n\n  ngOnInit(): void {\n    this.todoList = this.todoListService.getTodoList();\n  }\n\n  addItem(title: string): void {\n    this.todoListService.addItem({ title });\n  }\n\n  removeItem(item): void {\n    this.todoListService.deleteItem(item);\n  }\n\n  updateItem(item, changes): void {\n    this.todoListService.updateItem(item, changes);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1 class=\"app-title\">\n      Welcome to {{ title }}!\n    </h1>\n\n    <app-list-manager></app-list-manager>\n  `,\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'todo-list';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { InputButtonUnitComponent } from './input-button-unit/input-button-unit.component';\nimport { TodoItemComponent } from './todo-item/todo-item.component';\nimport { ListManagerComponent } from './list-manager/list-manager.component';\nimport { TodoListService } from './services/todo-list.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputButtonUnitComponent,\n    TodoItemComponent,\n    ListManagerComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [TodoListService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor() { }\n\n  getData(key: string): any {\n    return JSON.parse(localStorage.getItem(key));\n  }\n\n  setData(key: string, data: any): void {\n    localStorage.setItem(key, JSON.stringify(data));\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}